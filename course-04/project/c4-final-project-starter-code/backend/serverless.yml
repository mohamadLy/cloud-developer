service:
  name: serverless-todo-app

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-s3-local
  
custom:
  serverless-offline:
    port: 3003
    stageVariables:
      TODOS_TABLE: todos_table
      IMAGES_S3_BUCKET: images_s3_bucket

  tableNames:
    todos_table: 'todos_table'
  dynamodb:
    start:
      migrate: true
    stages:
      - dev
  s3:
    host: localhost
    directory: /tmp
  resources:
    Resources:
      NewResource:
        Type: AWS::S3::Bucket
        Properties:
          BucketName: images_s3_bucket
  
provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  environment: 
    #TODOS_TABLE: TODO-${self:provider.stage}
    #IMAGES_S3_BUCKET: serverless-todo-images-${self:provider.stage}
    TODOS_TABLE: TODO-todos-dev
    IMAGES_S3_BUCKET: images-s3-bucket
    SIGNED_URL_EXPIRATION: 300

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
   
functions:

  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler

  # TODO: Configure this function
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get
          path: todos
          cors: true

  # TODO: Configure this function
  CreateTodo:
    handler: src/lambda/http/createTodo.handler
    events:
      - http:
          method: post
          path: todos
          cors: true

  # TODO: Configure this function
  UpdateTodo:
    handler: src/lambda/http/updateTodo.handler
    events:
      - http:
          method: patch
          path: todos/{todoId}
          cors: true

  # TODO: Configure this function
  DeleteTodo:
    handler: src/lambda/http/deleteTodo.handler
    events:
      - http:
          method: delete
          path: todos/{todoId}

  # TODO: Configure this function
  GenerateUploadUrl:
    handler: src/lambda/http/generateUploadUrl.handler
    events:
      - http:
          method: post
          path: todos/{todoId}/attachment

resources:
  Resources:
    # TODO: Add any necessary AWS resources